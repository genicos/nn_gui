var app=function(){"use strict";function t(){}function e(t){return t()}function n(){return Object.create(null)}function o(t){t.forEach(e)}function s(t){return"function"==typeof t}function r(t,e){return t!=t?e==e:t!==e||t&&"object"==typeof t||"function"==typeof t}function i(t,e){t.appendChild(e)}function u(t){t.parentNode.removeChild(t)}function a(t){return document.createElement(t)}function l(t){return document.createTextNode(t)}function p(){return l(" ")}function c(t,e,n){null==n?t.removeAttribute(e):t.getAttribute(e)!==n&&t.setAttribute(e,n)}let h;function f(t){h=t}function d(t){(function(){if(!h)throw new Error("Function called outside component initialization");return h})().$$.on_mount.push(t)}const g=[],_=[],m=[],y=[],v=Promise.resolve();let w=!1;function x(t){m.push(t)}const b=new Set;let $=0;function k(){const t=h;do{for(;$<g.length;){const t=g[$];$++,f(t),L(t.$$)}for(f(null),g.length=0,$=0;_.length;)_.pop()();for(let t=0;t<m.length;t+=1){const e=m[t];b.has(e)||(b.add(e),e())}m.length=0}while(g.length);for(;y.length;)y.pop()();w=!1,b.clear(),f(t)}function L(t){if(null!==t.fragment){t.update(),o(t.before_update);const e=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,e),t.after_update.forEach(x)}}const T=new Set;function E(t,e){-1===t.$$.dirty[0]&&(g.push(t),w||(w=!0,v.then(k)),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}function C(r,i,a,l,p,c,d,g=[-1]){const _=h;f(r);const m=r.$$={fragment:null,ctx:null,props:c,update:t,not_equal:p,bound:n(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(i.context||(_?_.$$.context:[])),callbacks:n(),dirty:g,skip_bound:!1,root:i.target||_.$$.root};d&&d(m.root);let y=!1;if(m.ctx=a?a(r,i.props||{},((t,e,...n)=>{const o=n.length?n[0]:e;return m.ctx&&p(m.ctx[t],m.ctx[t]=o)&&(!m.skip_bound&&m.bound[t]&&m.bound[t](o),y&&E(r,t)),e})):[],m.update(),y=!0,o(m.before_update),m.fragment=!!l&&l(m.ctx),i.target){if(i.hydrate){const t=function(t){return Array.from(t.childNodes)}(i.target);m.fragment&&m.fragment.l(t),t.forEach(u)}else m.fragment&&m.fragment.c();i.intro&&((v=r.$$.fragment)&&v.i&&(T.delete(v),v.i(w))),function(t,n,r,i){const{fragment:u,on_mount:a,on_destroy:l,after_update:p}=t.$$;u&&u.m(n,r),i||x((()=>{const n=a.map(e).filter(s);l?l.push(...n):o(n),t.$$.on_mount=[]})),p.forEach(x)}(r,i.target,i.anchor,i.customElement),k()}var v,w;f(_)}console.log("def objects loaded");class A{constructor(t,e){this.scalar=!1,this.live=t||!1,e?this.form=e:e=[],this.x=0,this.y=0,this.input_to=[],this.output_of=null}calc_size(){if(this.form){var t=1;for(let e=0;e<this.form.length;e++)t*=this.form[e];this.size=t}else this.size=0;return this.size}}class R{constructor(t){this.inputs=[],this.outputs=[],this.func=t,this.size=null,this.network=null}clone(){var t=new R(this.func);return t.inputs=[...this.inputs],t.outputs=[...this.outputs],t.network=this.network,t}}class S{constructor(t,e){this.name=t,this.num_inputs=e}calc_form(t,e){var n=[];switch(console.log(this.name),this.name){case"identity":case"add":case"subtract":case"scale":case"softmax":case"hardmax":case"ReLU":case"LeakyReLU":case"Leaky to ReLU":n.push(e.tensors[t[0]].form);break;case"full":var o=e.tensors[t[0]].form,s=e.tensors[t[1]].form,r=1;for(let t=0;t<o.length;t++)r*=o[t];var i=1;for(let t=0;t<s.length;t++)i*=s[t];(u=[]).push(i/r),n.push(u);break;case"amass":case"max":(u=[]).push(1),n.push(u);break;case"convolution":o=e.tensors[t[0]].form,s=e.tensors[t[1]].form;var u=[];for(let t=0;t<o.length;t++)s.length<=t?u.push(o[t]):u.push(o[t]-s[t]+1);n.push(u);break;case"squared dist":n.push([1])}return n}}var O=Array.apply(null,Array(12)).map((function(){}));O[0]=new S("abstraction",0),O[1]=new S("identity",1),O[2]=new S("add",2),O[3]=new S("subtract",2),O[4]=new S("scale",2),O[5]=new S("full",2),O[6]=new S("amass",1),O[7]=new S("softmax",1),O[8]=new S("hardmax",1),O[9]=new S("max",1),O[10]=new S("convolution",2),O[11]=new S("squared dist",2),O[12]=new S("ReLU",1),O[13]=new S("LeakyReLU",1),O[14]=new S("Leaky to ReLU",1);var P=0,B=0;console.log("gui logic loaded");var U=0,z=0;const I=10;var q=-1,D=0,j=0,F=[];F.push(new class{constructor(){this.tensors=[],this.operators=[],this.input_tensors=[],this.param_tensors=[],this.output_tensors=[],this.truth_tensors=[],this.loss=null}add_tensor(t){this.tensors.push(t)}add_operator(t){var e=t.clone();this.operators.push(e);for(let t=0;t<e.inputs.length;t++)this.tensors[e.inputs[t]].input_to.push(this.operators.length-1);for(let t=0;t<e.outputs.length;t++)this.tensors[e.outputs[t]].output_of=this.operators.length-1}update_tensors(){for(let t=0;t<this.tensors.length;t++)this.tensors[t].input_to=[],this.tensors[t].output_of=null;for(let t=0;t<this.operators.length;t++){for(let e=0;e<this.operators[t].inputs.length;e++)this.tensors[this.operators[t].inputs[e]].input_to.push(t);for(let e=0;e<this.operators[t].outputs.length;e++)this.tensors[this.operators[t].outputs[e]].output_of=t}}expand(){for(let u=0;u<this.operators.length;u++)if(0==this.operators[u].func&&this.operators[u].network){var t=this.operators[u].network;t.expand();var e=this.operators[u],n=this.operators.length;this.operators[u]=t.operators[0];for(let e=1;e<t.operators.length;e++)this.add_operator(t.operators[e]);for(let a=0;a<t.tensors.length;a++){var o=a;if(t.input_tensors.includes(a)){var s=t.input_tensors.indexOf(a);o=e.inputs[s]}else if(t.output_tensors.includes(a)){s=t.output_tensors.indexOf(a);o=e.outputs[s]}else this.add_tensor(t.tensors[a]),o=this.tensors.length-1;for(let e=0;e<t.tensors[a].input_to.length;e++){var r=t.tensors[a].input_to[e],i=t.operators[r].inputs.indexOf(a);0==r?this.operators[u].inputs[i]=o:this.operators[r+n-1].inputs[i]=o}if(t.tensors[a].output_of||0==t.tensors[a].output_of){r=t.tensors[a].output_of,i=t.operators[r].outputs.indexOf(a);0==r?this.operators[u].outputs[i]=o:this.operators[r+n-1].outputs[i]=o}}this.update_tensors()}}to_string(){var t="";t+="Tensors: \n";for(let e=0;e<this.tensors.length;e++){t+="\t"+e+":\n",this.tensors[e].form&&(t+="\t\tform: "+String(this.tensors[e].form)+"\n"),t+="\t\tinput_to:\n";for(let n=0;n<this.tensors[e].input_to.length;n++)t+="\t\t\t"+this.tensors[e].input_to[n]+"\n";t+="\t\toutput_of\n",t+="\t\t\t"+this.tensors[e].output_of+"\n"}t+="Operators: \n";for(let e=0;e<this.operators.length;e++){t+="\t"+e+":\n",t+="\t\tinputs:\n";for(let n=0;n<this.operators[e].inputs.length;n++)t+="\t\t\t"+this.operators[e].inputs[n]+"\n";t+="\t\toutputs:\n";for(let n=0;n<this.operators[e].outputs.length;n++)t+="\t\t\t"+this.operators[e].outputs[n]+"\n";t+="\t\tfunc: "+this.operators[e].func+"\n"}t+="input_tensors:\n";for(let e=0;e<this.input_tensors.length;e++)t+="\t"+this.input_tensors[e]+"\n";t+="param_tensors:\n";for(let e=0;e<this.param_tensors.length;e++)t+="\t"+this.param_tensors[e]+"\n";t+="output_tensors:\n";for(let e=0;e<this.output_tensors.length;e++)t+="\t"+this.output_tensors[e]+"\n";return t}}),F[0].add_tensor(new A(!1)),F[0].tensors[0].x=200,F[0].tensors[0].y=200,F[0].add_tensor(new A(!1)),F[0].tensors[1].x=100,F[0].tensors[1].y=200,F[0].add_tensor(new A(!1)),F[0].tensors[2].x=150,F[0].tensors[2].y=150;let N=new R;N.inputs=[1,2],N.outputs=[0],N.func=5,F[0].add_operator(N),F[0].add_tensor(new A(!0)),F[0].tensors[3].x=400,F[0].tensors[3].y=200,F[0].add_tensor(new A(!0)),F[0].tensors[4].x=300,F[0].tensors[4].y=200,F[0].add_tensor(new A(!1)),F[0].tensors[5].x=350,F[0].tensors[5].y=150,F[0].add_tensor(new A(!0)),F[0].tensors[6].x=350,F[0].tensors[6].y=350;let X=new R;X.inputs=[4,5],X.outputs=[3],X.func=2,F[0].add_operator(X),F[0].add_tensor(new A(!0)),F[0].tensors[7].x=500,F[0].tensors[7].y=200,F[0].add_tensor(new A(!0)),F[0].tensors[8].x=400,F[0].tensors[8].y=200,F[0].add_tensor(new A(!0)),F[0].tensors[9].x=450,F[0].tensors[9].y=150,F[0].add_tensor(new A(!0)),F[0].tensors[10].x=450,F[0].tensors[10].y=350;let G=new R;function H(t,e){let n=t.tensors[e];n.live?(B.fillStyle="white",B.lineWidth=1,B.setLineDash([]),B.strokeStyle="black"):(B.fillStyle="rgba(255,255,255,0)",B.lineWidth=1,B.setLineDash([3,4]),B.strokeStyle="Grey"),B.beginPath(),n.scalar?B.rect(n.x-5,n.y-5,10,10):B.rect(n.x-I,n.y-I,20,20),B.fill(),B.stroke()}function M(t,e){let n,o,s,r=t.operators[e],i=B.createLinearGradient(0,0,U,z);switch(i.addColorStop(0,"#DE7521"),i.addColorStop(1,"#218ADE"),B.fillStyle=i,r.func){case 0:case 1:case 4:case 6:case 7:case 8:case 9:case 10:case 11:break;case 2:n=t.tensors[r.inputs[0]],o=t.tensors[r.inputs[1]],s=t.tensors[r.outputs[0]],B.beginPath(),B.moveTo(s.x-I,s.y-I),B.lineTo(s.x-I,s.y+I),B.lineTo(n.x+I,n.y+I),B.lineTo(n.x+I,n.y-I),B.closePath(),B.fill(),B.beginPath(),B.moveTo(s.x-I,s.y-I),B.lineTo(s.x-I,s.y+I),B.lineTo(o.x+I,o.y+I),B.lineTo(o.x+I,o.y-I),B.closePath(),B.fill();break;case 3:n=t.tensors[r.inputs[0]],o=t.tensors[r.inputs[1]],s=t.tensors[r.outputs[0]];break;case 5:n=t.tensors[r.inputs[0]],o=t.tensors[r.inputs[1]],s=t.tensors[r.outputs[0]],B.beginPath(),B.moveTo(s.x-I,s.y-I),B.lineTo(s.x-I,s.y+I),B.lineTo(n.x+I,n.y+I),B.lineTo(n.x+I,n.y-I),B.lineTo(o.x-I,o.y+I),B.lineTo(o.x+I,o.y+I),B.closePath(),B.fill();break;default:console.log("Invalid operator types")}}function W(){P.width=P.getBoundingClientRect().width,P.height=P.getBoundingClientRect().height,U=P.width,z=P.height;for(let t=0;t<F[0].tensors.length;t++)H(F[0],t);for(let t=0;t<F[0].operators.length;t++)M(F[0],t);window.requestAnimationFrame(W)}function Y(){var t=[];for(let e=0;e<F.length;e++)for(let n=0;n<F[0].tensors.length;n++)F[e].tensors[n].x-I<D&&F[e].tensors[n].x+I>D&&F[e].tensors[n].y-I<j&&F[e].tensors[n].y+I>j&&t.push(n);return t}function J(t){let e=Y();0!=e.length&&(q=e[0])}function K(t){let e=Y();console.log("Clicked Indices ",e);for(let t=0;t<e.length;t++){var n=e[t];t0=F[0].tensors[n],null==t0.output_of||0==t0.input_to.length?t0.live=!t0.live:(console.log("Unmerge"),V(n))}}function Q(t){q=-1;let e=Y();e.length>=2&&function(t,e){if(F[0].tensors[t].live&&F[0].tensors[e].live)return void console.log("Both merged tensors are live, so don't do anything.");let n=F[0].tensors[t],o=F[0].tensors[e],s=e,r=t;if(console.log("Poopoo ",n.output_of,o.output_of),null!=n.output_of&&null==o.output_of);else{if(null==o.output_of||null!=n.output_of)return void console.log("Error merging, only one input must have an output");tmp=o,o=n,n=tmp,s=t,r=e}if(console.log(n.output_of,o.input_to),n.output_of==o.input_to)return void console.log("These are input and output of the same function, dummy!");let i=F[0].operators[o.input_to].inputs.indexOf(s);F[0].operators[o.input_to].inputs[i]=r,n.input_to=o.input_to,n.live=!0,function(t){for(let e=0;e<F[0].operators.length;e++){for(let n=0;n<F[0].operators[e].inputs.length;n++)F[0].operators[e].inputs[n]>t&&(F[0].operators[e].inputs[n]-=1);for(let n=0;n<F[0].operators[e].outputs.length;n++)F[0].operators[e].outputs[n]>t&&(F[0].operators[e].outputs[n]-=1)}F[0].tensors.splice(t,1)}(s)}(e[0],e[1])}function V(t){t0=F[0].tensors[t],functions=t0.input_to,t0.input_to=[],console.log("Functions ",functions);for(let e=0;e<functions.length;e++)fi=functions[e],X=F[0].operators[fi],tnewind=F[0].tensors.length,F[0].add_tensor(new A(!0)),todeleteind=X.inputs.findIndex((e=>e==t)),X.inputs[todeleteind]=tnewind,F[0].tensors[tnewind].x=t0.x+20,F[0].tensors[tnewind].y=t0.y,F[0].tensors[tnewind].input_to=[fi],F[0].tensors[tnewind].output_of=null,F[0].tensors[tnewind].live=!1;t0.x-=20,t0.live=!1}function Z(t){t.offsetX?(D=t.offsetX,j=t.offsetY):t.layerX&&(D=t.layerX,j=t.layerY),-1!=q&&(F[0].tensors[q].x=D,F[0].tensors[q].y=j)}function tt(e){let n,o,s,r,h,f,d,g,_,m,y,v;return{c(){n=a("main"),o=a("div"),s=a("h1"),r=l("Hello "),h=l(e[0]),f=l("!"),d=p(),g=a("button"),g.textContent="Get a random number",_=p(),m=a("div"),m.innerHTML='<div id="left_tool_bar" class="svelte-10y6me9">stuff like buttons for adding operations</div> \n\t\t<div id="canvas_container" class="svelte-10y6me9"><canvas id="gui_canvas" class="svelte-10y6me9"></canvas></div>',c(s,"class","svelte-10y6me9"),c(o,"id","examplestuff"),c(o,"class","svelte-10y6me9"),c(m,"id","workspace"),c(m,"class","svelte-10y6me9"),c(n,"class","svelte-10y6me9")},m(t,u){var a,l,p,c;!function(t,e,n){t.insertBefore(e,n||null)}(t,n,u),i(n,o),i(o,s),i(s,r),i(s,h),i(s,f),i(o,d),i(o,g),i(n,_),i(n,m),y||(a=g,l="click",p=e[1],a.addEventListener(l,p,c),v=()=>a.removeEventListener(l,p,c),y=!0)},p(t,[e]){1&e&&function(t,e){e=""+e,t.wholeText!==e&&(t.data=e)}(h,t[0])},i:t,o:t,d(t){t&&u(n),y=!1,v()}}}function et(t,e,n){d((()=>{console.log("CALLED INIT"),(P=document.getElementById("gui_canvas")).addEventListener("mousedown",J,!1),P.addEventListener("mousemove",Z,!1),P.addEventListener("mouseup",Q,!1),P.addEventListener("dblclick",K,!1),B=P.getContext("2d"),P.width=P.getBoundingClientRect().width,P.height=P.getBoundingClientRect().height,U=P.width,z=P.height,window.requestAnimationFrame(W)}));let o=-3;return[o,function(){fetch("../rand").then((t=>t.text())).then((t=>n(0,o=t)))}]}G.inputs=[8,9],G.outputs=[7],G.func=5,F[0].add_operator(G),F[0].add_tensor(new A(!0)),F[0].tensors[11].x=400,F[0].tensors[11].y=400,F[0].tensors[11].scalar=!0;return new class extends class{$destroy(){!function(t,e){const n=t.$$;null!==n.fragment&&(o(n.on_destroy),n.fragment&&n.fragment.d(e),n.on_destroy=n.fragment=null,n.ctx=[])}(this,1),this.$destroy=t}$on(t,e){const n=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return n.push(e),()=>{const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}$set(t){var e;this.$$set&&(e=t,0!==Object.keys(e).length)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}}{constructor(t){super(),C(this,t,et,tt,r,{})}}({target:document.body,props:{name:"world"}})}();
//# sourceMappingURL=bundle.js.map
